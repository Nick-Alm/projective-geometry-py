from Object3D import *
from projectiveFormulas import TwoPointsOperation
from Camera import Camera

squarePoints = [[-10,10,0],[10,10,0],[10,-10,0],[-10,-10,0]]

point1 = Point3D()
point2 = Point3D()
point1.setXValue(1.0)
point1.setZValue(1.0)
point1.setYValue(1.0)
testVanishPoint = Point3D()
testVanishPoint.setYValue(100.0)
viewport = Camera()
viewport.setVanishPoint(testVanishPoint)
print('vanish point before rotation:')
print(viewport.getVanishPoint().getValues())
print('window center before rotation:')
print(viewport.getWindowCenter().getValues())
print('viewfield before rotation:')
print(viewport.getViewField())
print('viewport angle before rotation:')
print(viewport.getCartesianAngle())
viewport.rotateLeft()
viewport.rotateLeft()
viewport.rotateLeft()

square = Object3D()
print('other crap')
formulaInstance = TwoPointsOperation(point1, point2)
print(point1.getValues())
print(point2.getValues())
print(formulaInstance.getYDistance(point1,point2))
print(formulaInstance.getDirectDistance(point1,point2))
print(formulaInstance.getPitch(point1, point2))
print(formulaInstance.getYaw(point1,point2))
print('vanish point after rotation:')
print(viewport.getVanishPoint().getValues())
print('window center after rotation:')
print(viewport.getWindowCenter().getValues())
print('viewfield after rotation:')
print(viewport.getViewField())
print('viewport angle after rotation:')
print(viewport.getCartesianAngle())
print('')
viewport.rotateRight()
viewport.rotateRight()
viewport.rotateRight()
viewport.rotateRight()
viewport.rotateRight()
viewport.rotateRight()

print('vanish point after right rotation:')
print(viewport.getVanishPoint().getValues())
print('window center after right rotation:')
print(viewport.getWindowCenter().getValues())
print('viewfield after right rotation:')
print(viewport.getViewField())
print('viewport angle after right rotation:')
print(viewport.getCartesianAngle())